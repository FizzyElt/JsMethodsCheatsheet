import { num, noReturn, bool, str } from './type.js'

const numberList = [
  {
    name: 'Number.EPSILON',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON',
    explanation: '表示 1 與Number可表示的大於 1 的最小的浮點數之間的差值。',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.MAX_SAFE_INTEGER',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER',
    explanation: '表示在 JavaScript 中最大的安全整數（maxinum safe integer)（2^53 - 1）。',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.MAX_VALUE',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE',
    explanation: '表示在 JavaScript 裡所能表示的最大數值。',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.MIN_SAFE_INTEGER',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER',
    explanation: '代表在 JavaScript中最小的安全的integer型數字 (-(2^53 - 1)).',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.MIN_VALUE',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE',
    explanation: '表示在 JavaScript 中所能表示的最小的正值。',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.NEGATIVE_INFINITY',
    mdnLink:
      'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY',
    explanation: '表示負無窮大。',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.POSITIVE_INFINITY',
    mdnLink:
      'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY',
    explanation: '表示正無窮大。',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.NaN',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN',
    explanation: '表示“非數字”（Not-A-Number）。和 NaN 相同。',
    returnType: noReturn,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'Number.isFinite()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite',
    explanation: '用來檢測傳入的參數是否是一個有窮數（finite number）。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'value',
  },
  {
    name: 'Number.isInteger()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger',
    explanation: '判斷給定的參數是否為整數。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'value',
  },
  {
    name: 'Number.isNaN()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN',
    explanation: '確定傳遞的值是否為 NaN，並且檢查其類型是否為 Number。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'value',
  },
  {
    name: 'Number.isSafeInteger()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger',
    explanation: '判斷傳入的參數值是否是一個“安全整數”（safe integer）。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'value',
  },
  {
    name: 'Number.parseFloat()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat',
    explanation: '可以把一個字符串解析成浮點數。',
    returnType: num,
    isChangeValue: false,
    parameter: 'string',
  },
  {
    name: 'Number.parseInt()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt',
    explanation: '依據指定基數 [ 參數 radix 的值]，把字符串 [ 參數 string 的值] 解析成整數。',
    returnType: num,
    isChangeValue: false,
    parameter: 'string',
  },
  {
    name: 'Number.prototype.toExponential()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential',
    explanation: '以指數表示法返回該數值字符串表示形式。',
    returnType: str,
    isChangeValue: false,
    parameter: '*fractionDigits',
  },
  {
    name: 'Number.prototype.toFixed()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed',
    explanation: '使用定點表示法來格式化一個數值。',
    returnType: str,
    isChangeValue: false,
    parameter: 'digits',
  },
  {
    name: 'Number.prototype.toLocaleString()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString',
    explanation: '返回這個數字在特定語言環境下的表示字符串。',
    returnType: str,
    isChangeValue: false,
    parameter: 'locales,*options',
  },
  {
    name: 'Number.prototype.toPrecision()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision',
    explanation: '以指定的精度返回該數值對象的字符串表示。',
    returnType: str,
    isChangeValue: false,
    parameter: '*precision',
  },
  {
    name: 'Number.prototype.toString()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toString',
    explanation: '返回指定 Number 物件的字符串表示形式。',
    returnType: str,
    isChangeValue: false,
    parameter: '*radix',
  },
]
export default numberList
