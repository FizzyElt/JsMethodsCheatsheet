import { str, num, bool, arr, arrIterator } from './type.js'

const stringList = [
  {
    name: 'String.fromCharCode()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode',
    explanation: '返回由指定的UTF-16代碼單元序列創建的字符串。',
    returnType: str,
    isChangeValue: false,
    parameter: 'num1, num2,...numN',
  },
  {
    name: 'String.fromCodePoints()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoints',
    explanation: '返回使用指定的代碼點序列創建的字符串。',
    returnType: str,
    isChangeValue: false,
    parameter: 'num1, num2,...numN',
  },
  {
    name: 'String.prototype.charAt()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charAt',
    explanation: '從一個字符串中返回指定的字符。',
    returnType: str,
    isChangeValue: false,
    parameter: 'index',
  },
  {
    name: 'String.prototype.charCodeAt()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt',
    explanation:
      '返回0到65535之間的整數，表示給定索引處的UTF-16代碼單元(在Unicode 編碼單元表示一個單一的UTF-16 編碼單元的情況下，UTF-16 編碼單元匹配Unicode 編碼單元。但在——例如Unicode 編碼單元> 0x10000 的這種——不能被一個 UTF-16 編碼單元單獨表示的情況下，只能匹配Unicode 代理對的第一個編碼單元) 。',
    returnType: num,
    isChangeValue: false,
    parameter: 'index',
  },
  {
    name: 'String.prototype.codePointAt()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt',
    explanation: '返回 一個 Unicode 編碼點值的非負整數。',
    returnType: num,
    isChangeValue: false,
    parameter: 'pos',
  },
  {
    name: 'String.prototype.concat()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/concat',
    explanation: '將一個或多個字符串與原字符串連接合併，形成一個新的字符串並返回。',
    returnType: str,
    isChangeValue: false,
    parameter: 'string1, string2, ...stringN',
  },
  {
    name: 'String.prototype.endsWith()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith',
    explanation: '判斷當前字符串是否是以另外一個給定的子字符串“結尾”的，根據判斷結果返回 true 或 false。',
    returnType: str,
    isChangeValue: false,
    parameter: 'searchString, *length',
  },
  {
    name: 'String.prototype.includes()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/includes',
    explanation: '判斷一個字符串是否包含在另一個字符串中，根據情況返回 true 或 false。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'searchString, *position',
  },
  {
    name: 'String.prototype.indexOf()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf',
    explanation:
      '返回調用它的 String 對像中第一次出現的指定值的索引，從 fromIndex 處進行搜索。如果未找到該值，則返回 -1。',
    returnType: num,
    isChangeValue: false,
    parameter: 'searchValue, *formIndex',
  },
  {
    name: 'String.prototype.lastIndexOf()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf',
    explanation:
      '返回調用String 對象的指定值最後一次出現的索引，在一個字符串中的指定位置 fromIndex處從後向前搜索。如果沒找到這個特定值則返回-1 。',
    returnType: num,
    isChangeValue: false,
    parameter: 'searchValue, *formIndex',
  },
  {
    name: 'String.prototype.localeCompare()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare',
    explanation: '返回一個數字來指示一個參考字符串是否在排序順序前面或之後或與給定字符串相同。',
    returnType: num,
    isChangeValue: false,
    parameter: 'compareString, *locales, *options',
  },
  {
    name: 'String.prototype.match()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match',
    explanation: '檢索返回一個字符串匹配正則表達式的的結果。',
    returnType: arr,
    isChangeValue: false,
    parameter: 'regexp',
  },
  {
    name: 'String.prototype.matchAll()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll',
    explanation: '返回一個包含所有匹配正則表達式的結果及分組捕獲組的迭代器。',
    returnType: arrIterator,
    isChangeValue: false,
    parameter: 'regexp',
  },
  {
    name: 'String.prototype.normalize()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/normalize',
    explanation:
      '會按照指定的一種 Unicode 正規形式將當前字符串正規化。 （如果該值不是字符串，則首先將其轉換為一個字符串）。',
    returnType: str,
    isChangeValue: false,
    parameter: '*from',
  },
  {
    name: 'String.prototype.padEnd()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd',
    explanation:
      '會用一個字符串填充當前字符串（如果需要的話則重複填充），返回填充後達到指定長度的字符串。從當前字符串的末尾（右側）開始填充。',
    returnType: str,
    isChangeValue: false,
    parameter: 'targetLength, *padString',
  },
  {
    name: 'String.prototype.padStart()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/padStart',
    explanation:
      '用另一個字符串填充當前字符串(重複，如果需要的話)，以便產生的字符串達到給定的長度。填充從當前字符串的開始(左側)應用的。',
    returnType: str,
    isChangeValue: false,
    parameter: 'targetLength, *padString',
  },
  {
    name: 'String.prototype.repeat()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/repeat',
    explanation: '返回一個新字符串，該字符串包含被連接在一起的指定數量的字符串的副本。',
    returnType: str,
    isChangeValue: false,
    parameter: 'count',
  },
  {
    name: 'String.prototype.replace()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace',
    explanation:
      '返回一個由替換值（replacement）替換一些或所有匹配的模式（pattern）後的新字符串。模式可以是一個字符串或者一個正則表達式，替換值可以是一個字符串或者一個每次匹配都要調用的回調函數。',
    returnType: str,
    isChangeValue: false,
    parameter: 'regexp||substr, newSubStr||function',
  },
  {
    name: 'String.prototype.search()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search',
    explanation: '執行正則表達式和 String 對象之間的一個搜索匹配。',
    returnType: num,
    isChangeValue: false,
    parameter: 'regexp',
  },
  {
    name: 'String.prototype.slice()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/slice',
    explanation: '提取某個字符串的一部分，並返回一個新的字符串，且不會改動原字符串。',
    returnType: str,
    isChangeValue: false,
    parameter: 'beginIndex, *endIndex',
  },
  {
    name: 'String.prototype.split()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split',
    explanation: '使用指定的分隔符字符串將一個String對象分割成子字符串數組，以一個指定的分割字串來決定每個拆分的位置。',
    returnType: arr,
    isChangeValue: false,
    parameter: 'separator, *limit',
  },
  {
    name: 'String.prototype.startsWith()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith',
    explanation: '用來判斷當前字符串是否以另外一個給定的子字符串開頭，並根據判斷結果返回 true 或 false。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'searchString, *position',
  },
  {
    name: 'String.prototype.substring()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/substring',
    explanation: '返回一個字符串在開始索引到結束索引之間的一個子集, 或從開始索引直到字符串的末尾的一個子集。',
    returnType: str,
    isChangeValue: false,
    parameter: 'indexStart, indexEnd',
  },
  {
    name: 'String.prototype.toLocaleLowerCase()',
    mdnLink:
      'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase',
    explanation: '根據任何指定區域語言環境設置的大小寫映射，返回調用字符串被轉換為小寫的格式。',
    returnType: str,
    isChangeValue: false,
    parameter: '*locale',
  },
  {
    name: 'String.prototype.toLocaleUpperCase()',
    mdnLink:
      'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase',
    explanation: '根據任何指定區域語言環境設置的大小寫映射，返回調用字符串被轉換為大寫的格式。',
    returnType: str,
    isChangeValue: false,
    parameter: '*locale',
  },
  {
    name: 'String.prototype.toLowerCase()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase',
    explanation: '調用該方法的字符串值轉為小寫形式，並返回。',
    returnType: str,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'String.prototype.toUpperCase()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase',
    explanation: '調用該方法的字符串值轉為大寫形式，並返回。',
    returnType: str,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'String.prototype.trim()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trim',
    explanation:
      '會從一個字符串的兩端刪除空白字符。在這個上下文中的空白字符是所有的空白字符 (space, tab, no-break space 等) 以及所有行終止符字符（如 LF，CR等）。',
    returnType: str,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'String.prototype.trimRight()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trimRight',
    explanation: '從一個字符串的末端移除空白字符。',
    returnType: str,
    isChangeValue: false,
    parameter: '',
  },
  {
    name: 'String.prototype.trimStart()',
    mdnLink: 'https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart',
    explanation: '從字符串的開頭刪除空白字符。',
    returnType: str,
    isChangeValue: false,
    parameter: '',
  },
]

export default stringList
