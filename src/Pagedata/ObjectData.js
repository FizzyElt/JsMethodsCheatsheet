import { arr, bool, obj } from './type.js'

const objectList = [
  {
    name: 'Object.assign()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/assign',
    explanation: '複製一個或多個物件自身所有可數的屬性到另一個目標物件。回傳的值為該目標物件。',
    returnType: obj,
    isChangeValue: false,
    parameter: 'target, sourses',
  },
  {
    name: 'Object.create()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/create',
    explanation: '指定其原型物件與屬性，創建一個新物件。',
    returnType: obj,
    isChangeValue: false,
    parameter: 'proto, propertiesObject',
  },
  {
    name: 'Object.defineProperties()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties',
    explanation: '定義新的或是修改已存在的物件屬性，並回傳修改後的物件。',
    returnType: obj,
    isChangeValue: true,
    parameter: 'obj, {props:{configurable, enumerable, value, writable, get, set}...}',
  },
  {
    name: 'Object.defineProperty()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty',
    explanation: '直接對一個物件定義、或是修改現有的屬性。執行後會回傳定義完的物件。',
    returnType: obj,
    isChangeValue: true,
    parameter: 'obj, prop, descriptor',
  },
  {
    name: 'Object.entries()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/entries',
    explanation: '返回一個给定對象自身可枚舉屬性的键值對數組，其排列與使用 for...in 循環遍歷該對象時返回的順序一致。',
    returnType: arr,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.fromEntries()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries',
    explanation: '把键值對列表轉換為一個對象。',
    returnType: obj,
    isChangeValue: false,
    parameter: 'iterable',

  },
  {
    name: 'Object.freeze()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze',
    explanation: '用來「凍結」一個物件的: 也就是防止物件新增屬性; 防止物件既有的屬性被刪除; 防止物件原本的屬性, 還有屬性的可列舉性, 可設定性, 可寫性被改動; 同時它也防止物件的原型被改變。此方法回傳一個凍結狀態的物件。',
    returnType: obj,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.getOwnPropertyDescriptor()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor',
    explanation: '返回指定對象上一個自有屬性對應的屬性描述符。(自有屬性指的是直接賦予該對象的屬性，不需要從原型練上進行查找的屬性)',
    returnType: obj,
    isChangeValue: false,
    parameter: 'obj, prop',
  },
  {
    name: 'Object.getOwnPropertyDescriptors()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors',
    explanation: '用來獲取一個對象的所有自身屬性的描述符。',
    returnType: obj,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.getOwnPropertyNames()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames',
    explanation: '返回一個由指定對象的所有自身屬性的屬性名（包括不可枚舉屬性但不包括Symbol值作為名稱的屬性）组成的數組。',
    returnType: arr,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.getOwnPropertySymbols()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols',
    explanation: '返回一個给定對象自身的所有 Symbol 屬性的數組。',
    returnType: arr,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.getPrototypeOf()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf',
    explanation: '回傳指定物件的原型，換句話說，就是取得該物件的 [[Prototype]] 屬性的值)。',
    returnType: obj,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.is()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/is',
    explanation: '判斷兩個值是否是相同的值。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'val1, val2',
  },
  {
    name: 'Object.isExtensible()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible',
    explanation: '判斷一個對象是否可以擴展(是否可以在它上面添加新的屬性)。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.isForzen()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/isForzen',
    explanation: '判斷一個對象是否被凍結',
    returnType: bool,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.preventExtensions()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions',
    explanation: '讓一個對象變成不可擴展，也就是永遠不能再添加新的屬性',
    returnType: obj,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.seal()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/seal',
    explanation: '封閉一個對象，阻止添加新屬性並將所有現有屬性標記為不可配置。當前屬性的值只要原來是可寫的就可以改變。',
    returnType: obj,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.isSealed()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed',
    explanation: '判斷一個對象是否被密封',
    returnType: bool,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.keys()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/keys',
    explanation: '回傳一個由指定物件所有可列舉之屬性組成的陣列，該陣列中的的排列順序與使用 for...in 進行迭代的順序相同。',
    returnType: arr,
    isChangeValue: false,
    parameter: 'obj',
  },
  {
    name: 'Object.prototype.hasOwnProperty()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty',
    explanation: '返回一個布林值，指示對象自身屬性中是否具有指定的屬性（也就是，是否有指定的鍵）。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'prop',
  },
  {
    name: 'Object.prototype.isPrototypeOf()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf',
    explanation: '用於測試一個對象是否存在於另一個對象的原型鏈上。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'object',
  },
  {
    name: 'Object.prototype.propertyIsEnumerable()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable',
    explanation: '返回一個布林值，表示指定的屬性是否可枚舉。',
    returnType: bool,
    isChangeValue: false,
    parameter: 'prop',
  },
  {
    name: 'Object.values()',
    mdnLink: 'https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/values',
    explanation: '返回一個布林值，表示指定的屬性是否可枚舉。',
    returnType: arr,
    isChangeValue: false,
    parameter: 'obj',
  },
]


export default objectList